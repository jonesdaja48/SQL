/*In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.*/

SELECT * FROM BIT_DB.customers
WHERE length(order_id) = 6
AND order_id <> 'Order ID';


SELECT *
FROM BIT_DB.JanSales LIMIT 20;

/*How many orders were placed in January?*/

SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

/*How many of those orders were for an iPhone?*/

SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone' 
AND length(orderID) = 6
AND orderID <> 'Order ID';

/*Select the customer account numbers for all the orders that were placed in February.*/

SELECT distinct acctnum
FROM BIT_DB.customers cust

INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

/*Which product was the cheapest one sold in January, and what was the price?*/

SELECT DISTINCT Product, MIN(price)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
ORDER BY price LIMIT 1;

/*What is the total revenue for each product sold in January?*/

SELECT Product, SUM(Quantity)*price as revenue
FROM BIT_DB.JanSales
GROUP BY Product;

/*Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?*/

SELECT Product, Quantity, SUM(Quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

/* 
 You're Ready to Break Into Tech (0:57)
  3.3 Customer & Order Analytics Project
Analytics Questions in SQLite Studio
Now that you've downloaded SQLite Studio, uploaded a SQL database into it, and explored the data, you can start answering analytics questions like a real data analyst!

Learn from Your Mistakes
Now that we're getting more advanced, it's very important to understand why your answer isn't correct when you don't quite get it right.

From here on out in the course, if your SQL doesn't match the correct answer SQL, here's what you should do:

Copy & paste the correct SQL into SQLite Studio and run it to compare the results of your answer to the results of the correct answer.
If your SQL is different but the results are the same, that means your SQL is correct! There are often multiple different ways to answer a question with SQL.
If your SQL is different from the answer and returns a different result, that means your SQL is not correct.
Here's what you should do if you don't understand an answer or why your answer isn't right:

Compare the results of your query with the results of the correct query. Try to understand what your results are showing vs. what the correct results are showing.
If you're having trouble understanding what a certain SQL command is doing, or why the correct answer uses a certain SQL command, here's what I recommend: Go to the w3schools SQL tutorial and click on the command you need help with (along the left side of the site) to learn more about what it does and to practice using it.
Do what data analysts do on the job: use Google! Try seeing if anyone has asked your question before online and if there are any answers posted.
In our Discord, search to see if anyone has already discussed your question before. Do this by typing a part of the question into the search bar at the top right of the screen (like in the image below).







Let's Practice!
Now answer these questions by writing SQL in the SQLite Studio RDBMS. Feel free to peek at the hints and answers when you're stuck, but make sure you try your best first. Then practice using the tips above if you get any wrong answers - this helps solidify the concepts you're learning and practicing.

Question #1
How many orders were placed in January?
Remember to filter out the blank and incorrect order IDs like we did in the "dealing with messy data" section of the previous lesson!

Hint #1

Hint #2

Answer

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';



Question #2
How many of those orders were for an iPhone?

Hint

Answer
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';



Question #3
Select the customer account numbers for all the orders that were placed in February.

Hint

Answer


Question #4
Which product was the cheapest one sold in January, and what was the price?

Hint #1

Hint #2

Answer
There are multiple correct answers to this question. Here are some of them:

SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) FROM BIT_DB.JanSales);

SELECT distinct product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;

SELECT distinct product, MIN(price)
FROM BIT_DB.JanSales Jan
GROUP BY product, price
ORDER BY price ASC LIMIT 1;
PLEASE NOTE: If you used this option and forgot the GROUP BY, read the notes below.

SELECT product, min(price)
FROM BIT_DB.JanSales Jan
GROUP BY product, price
ORDER BY price ASC
LIMIT 1;


Answer Notes


Question #5
What is the total revenue for each product sold in January?
(Revenue can be calculated using the number of products sold and the price of the products).

Hint #1

Hint #2

Answer
SELECT sum(quantity)*price as revenue
,product
FROM BIT_DB.JanSales
GROUP BY product;
PLEASE NOTE: If you're unsure why we use sum(quantity)*price here, see the notes below for an explanation.


Answer Notes
Let's make sense of why we use SUM(quantity)*price rather than SUM(quantity*price). To start out, let's take a look at the data we're interested in from the table we're querying.
Go ahead and run this SQL:

SELECT orderid, quantity, price, product
FROM BIT_DB.JanSales;

You should see results showing that for each orderID, 1 or 2 products were ordered at a time. There are lots of duplicates of the product names, because different order IDs ordered the same product in many cases. How would we calculate how many of each product were sold? We'd use SUM(quantity).
So go ahead and run this query now:

SELECT SUM(quantity), price, product
FROM BIT_DB.JanSales
GROUP BY product, price;

Now there's only one of each product listed, with the price of that product and the total quantity of each that were sold. We want to take it once step further now and calculate the revenue for each product, which would be the the quantity of each product sold * the price of each product.
Based on our last query, we can see that this would be:

SELECT SUM(quantity)*price as Revenue
,product
FROM BIT_DB.JanSales
GROUP BY product;



Question #6
Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

Hint

Answer
SELECT
sum(Quantity),
product,
sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;




/*How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?*/

SELECT COUNT(distinct cust.acctnum), AVG(quantity*price)
FROM BIT_DB.FebSales as fsales 
LEFT JOIN BIT_DB.customers AS cust
ON fsales.orderID = cust.order_id
WHERE Quantity > 2
AND length(orderid) =6
AND orderid <> 'Order ID';